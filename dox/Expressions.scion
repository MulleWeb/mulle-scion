Expressions are used in the following statements: [`if`](if.scion?wrapper=_wrapper.scion), 
[`for`](for.scion?wrapper=_wrapper.scion), [`set`](set.scion?wrapper=_wrapper.scion), 
[`while`](for.scion?wrapper=_wrapper.scion).


## Method Call

You can use Objective-C [`[]`](if.scion?wrapper=_wrapper.scion) method calls.

## Array

You can specify an array of expressions with `@()` like @( 1, "A")

## Number

You can use an integer number like 1,2,3 or floating point numbers like 0.1, 0.2, 0.3.

## String

You can use strings like `"foo"` or `@"foo"`.

## Comparison

The available comparion operators are:

| Operator  | Alternative Form | Descriptor
|-----------|------------------|-----------------------
| `eq`      | '=='             | Equality comparison
| `ne`      | '!='             | Inequality comparison
| `lt`      | '<'              | Ascending comparison
| `le`      | '<='             | Ascending or equality comparison
| `gt`      | '>'              | Descending comparison
| `ge`      | '>='             | Descending or equality comparison
| `?:`      |                  | The ternary operator


#### Example 1

```
{% if 1 < 2 %}
t
{% else %}
f
{% endif %}
```


#### Example 2

```
{% if 1 gt 2 %}
t
{% else %}
f
{% endif %}
```

#### Example 3

```
{% if 1 == 2 %}
t
{% else %}
f
{% endif %}
```

#### Example 4

```
{% if 1 ne 2 %}
t
{% else %}
f
{% endif %}
```


#### Example 5

```
{% if 1 == 1 ? NO : YES %}
t
{% else %}
f
{% endif %}
```

## Functions

There is a very limited set of functions available, most of them map to the
Foundation function, where you can get more information.


| Function                         | Description                             |
|----------------------------------|-----------------------------------------|
| `defined( variable)`             | Check if a variable is defined          |
| `NSMakeRange( a, b)`             | Creates a NSRange "object"              |
| `NSStringFromRange( r)`          | String representation of a NSRange      |
| `NSLocalizedString( s, comment)` | Get a localized string
| `NSLog( format, ...)`            | Output to stderr. Useful for debugging. |